#!/usr/bin/env bash
set -e

sysroot="$(rustc --print sysroot)"

postgres_targets=("x86_64-postgres-linux-gnu" "aarch64-postgres-linux-gnu")

# Experimental support for apple targets. Note that cross-compiling to one
# target from the other is generally supported without extra work.
if [ "Darwin" = "$(uname -s)" ]; then
    echo "warning: macOS support is still experimental" >&2
    postgres_targets=("x86_64-apple-darwin-postgres" "aarch64-apple-darwin-postgres")
fi

if [ -n "${STD_TARGETS}" ]; then
    # Split on spaces or commas
    IFS=', ' read -r -a postgres_targets <<< "${STD_TARGETS}"
fi

# If you have `cargo zigbuild` installed and want to attempt using it for cross
# compiling postgrestd (It seems to be able to go from macOS to linux pretty
# well, and probably between linuxes without further config, but other things
# are untested).
CARGO_CMD="build"
if [ "${CROSS_WITH_CARGO_ZIGBUILD}" = "1" ]; then
    echo "warning: 'cargo zigbuild' support is still experimental" >&2
    CARGO_CMD="zigbuild"
fi

main() {
    case "$1" in
        build)
            setup_dir
            run_build
            ;;
        install)
            setup_dir
            run_build
            remove_rlibs
            copy_rlibs
            ;;
        clean)
            cargo clean
            remove_rlibs
            ;;
        help)
            print_help
            ;;
        *)
            print_help
            exit 1
            ;;
    esac
}

print_help() {
    echo "Usage: $0 help | build | clean | install"
}

setup_dir() {
    for target in "${postgres_targets[@]}"; do
        mkdir -p "${sysroot}"/lib/rustlib/"${target}"/lib
        cp -f -v ./"${target}.json" "${sysroot}"/lib/rustlib/"${target}"/target.json
    done
}

copy_json() {
    for target in "${postgres_targets[@]}"; do
        cp -f -v ./"${target}.json" "${sysroot}"/lib/rustlib/"${target}"/target.json
    done
}

remove_rlibs() {
    for target in "${postgres_targets[@]}"; do
        rm -f -v "${sysroot}"/lib/rustlib/"${target}"/lib/*.rlib
    done
}

copy_rlibs() {
    for target in "${postgres_targets[@]}"; do
        cp -f -v target/"${target}"/release/deps/*.rlib "${sysroot}/lib/rustlib/${target}/lib"
    done
}

run_build() {
    for target in "${postgres_targets[@]}"; do
        RUSTC_BOOTSTRAP=1 \
        RUSTFLAGS="-Cforce-unwind-tables=yes -Cembed-bitcode=yes -Aunused-unsafe -Aunused-imports" \
        __CARGO_DEFAULT_LIB_METADATA="postgrestd" \
        cargo "${CARGO_CMD}" \
            --target "${target}" \
            -Zbinary-dep-depinfo \
            --release \
            --features "compiler-builtins-mem" \
            --manifest-path "library/sysroot/Cargo.toml"
    done
}

main "$@"
